{"ast":null,"code":"// Google AdSense utility functions\n\n// Initialize Google AdSense ads\nexport const initializeAdSense = () => {\n  if (window.adsbygoogle) {\n    (window.adsbygoogle = window.adsbygoogle || []).push({});\n  }\n};\n\n// Load Google AdSense script if not already loaded\nexport const loadAdSenseScript = () => {\n  return new Promise((resolve, reject) => {\n    // Check if script is already loaded\n    if (window.adsbygoogle) {\n      resolve();\n      return;\n    }\n\n    // Check if script is already being loaded\n    if (document.querySelector('script[src*=\"adsbygoogle\"]')) {\n      // Wait for existing script to load\n      const checkLoaded = setInterval(() => {\n        if (window.adsbygoogle) {\n          clearInterval(checkLoaded);\n          resolve();\n        }\n      }, 100);\n      return;\n    }\n\n    // Load AdSense script\n    const script = document.createElement('script');\n    script.src = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3940256099942544';\n    script.async = true;\n    script.crossOrigin = 'anonymous';\n    script.onload = () => {\n      resolve();\n    };\n    script.onerror = () => {\n      reject(new Error('Failed to load Google AdSense script'));\n    };\n    document.head.appendChild(script);\n  });\n};\n\n// Test AdSense configuration\nexport const testAdSenseConfig = {\n  client: 'ca-pub-3940256099942544',\n  // Google's official test client ID\n  slot: '1234567890',\n  format: 'auto',\n  responsive: true\n};\n\n// Create AdSense ad element\nexport const createAdSenseAd = (config = {}) => {\n  const adConfig = {\n    ...testAdSenseConfig,\n    ...config\n  };\n  return {\n    className: 'adsbygoogle',\n    style: {\n      display: 'block'\n    },\n    'data-ad-client': adConfig.client,\n    'data-ad-slot': adConfig.slot,\n    'data-ad-format': adConfig.format,\n    'data-full-width-responsive': adConfig.responsive.toString()\n  };\n};","map":{"version":3,"names":["initializeAdSense","window","adsbygoogle","push","loadAdSenseScript","Promise","resolve","reject","document","querySelector","checkLoaded","setInterval","clearInterval","script","createElement","src","async","crossOrigin","onload","onerror","Error","head","appendChild","testAdSenseConfig","client","slot","format","responsive","createAdSenseAd","config","adConfig","className","style","display","toString"],"sources":["X:/Projects/watch and earn website/frontend/src/utils/adsense.js"],"sourcesContent":["// Google AdSense utility functions\r\n\r\n// Initialize Google AdSense ads\r\nexport const initializeAdSense = () => {\r\n  if (window.adsbygoogle) {\r\n    (window.adsbygoogle = window.adsbygoogle || []).push({});\r\n  }\r\n};\r\n\r\n// Load Google AdSense script if not already loaded\r\nexport const loadAdSenseScript = () => {\r\n  return new Promise((resolve, reject) => {\r\n    // Check if script is already loaded\r\n    if (window.adsbygoogle) {\r\n      resolve();\r\n      return;\r\n    }\r\n\r\n    // Check if script is already being loaded\r\n    if (document.querySelector('script[src*=\"adsbygoogle\"]')) {\r\n      // Wait for existing script to load\r\n      const checkLoaded = setInterval(() => {\r\n        if (window.adsbygoogle) {\r\n          clearInterval(checkLoaded);\r\n          resolve();\r\n        }\r\n      }, 100);\r\n      return;\r\n    }\r\n\r\n    // Load AdSense script\r\n    const script = document.createElement('script');\r\n    script.src = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3940256099942544';\r\n    script.async = true;\r\n    script.crossOrigin = 'anonymous';\r\n    \r\n    script.onload = () => {\r\n      resolve();\r\n    };\r\n    \r\n    script.onerror = () => {\r\n      reject(new Error('Failed to load Google AdSense script'));\r\n    };\r\n    \r\n    document.head.appendChild(script);\r\n  });\r\n};\r\n\r\n// Test AdSense configuration\r\nexport const testAdSenseConfig = {\r\n  client: 'ca-pub-3940256099942544', // Google's official test client ID\r\n  slot: '1234567890',\r\n  format: 'auto',\r\n  responsive: true\r\n};\r\n\r\n// Create AdSense ad element\r\nexport const createAdSenseAd = (config = {}) => {\r\n  const adConfig = { ...testAdSenseConfig, ...config };\r\n  \r\n  return {\r\n    className: 'adsbygoogle',\r\n    style: { display: 'block' },\r\n    'data-ad-client': adConfig.client,\r\n    'data-ad-slot': adConfig.slot,\r\n    'data-ad-format': adConfig.format,\r\n    'data-full-width-responsive': adConfig.responsive.toString()\r\n  };\r\n}; "],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,iBAAiB,GAAGA,CAAA,KAAM;EACrC,IAAIC,MAAM,CAACC,WAAW,EAAE;IACtB,CAACD,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACC,WAAW,IAAI,EAAE,EAAEC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1D;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACrC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC;IACA,IAAIN,MAAM,CAACC,WAAW,EAAE;MACtBI,OAAO,CAAC,CAAC;MACT;IACF;;IAEA;IACA,IAAIE,QAAQ,CAACC,aAAa,CAAC,4BAA4B,CAAC,EAAE;MACxD;MACA,MAAMC,WAAW,GAAGC,WAAW,CAAC,MAAM;QACpC,IAAIV,MAAM,CAACC,WAAW,EAAE;UACtBU,aAAa,CAACF,WAAW,CAAC;UAC1BJ,OAAO,CAAC,CAAC;QACX;MACF,CAAC,EAAE,GAAG,CAAC;MACP;IACF;;IAEA;IACA,MAAMO,MAAM,GAAGL,QAAQ,CAACM,aAAa,CAAC,QAAQ,CAAC;IAC/CD,MAAM,CAACE,GAAG,GAAG,+FAA+F;IAC5GF,MAAM,CAACG,KAAK,GAAG,IAAI;IACnBH,MAAM,CAACI,WAAW,GAAG,WAAW;IAEhCJ,MAAM,CAACK,MAAM,GAAG,MAAM;MACpBZ,OAAO,CAAC,CAAC;IACX,CAAC;IAEDO,MAAM,CAACM,OAAO,GAAG,MAAM;MACrBZ,MAAM,CAAC,IAAIa,KAAK,CAAC,sCAAsC,CAAC,CAAC;IAC3D,CAAC;IAEDZ,QAAQ,CAACa,IAAI,CAACC,WAAW,CAACT,MAAM,CAAC;EACnC,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMU,iBAAiB,GAAG;EAC/BC,MAAM,EAAE,yBAAyB;EAAE;EACnCC,IAAI,EAAE,YAAY;EAClBC,MAAM,EAAE,MAAM;EACdC,UAAU,EAAE;AACd,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAGA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK;EAC9C,MAAMC,QAAQ,GAAG;IAAE,GAAGP,iBAAiB;IAAE,GAAGM;EAAO,CAAC;EAEpD,OAAO;IACLE,SAAS,EAAE,aAAa;IACxBC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAQ,CAAC;IAC3B,gBAAgB,EAAEH,QAAQ,CAACN,MAAM;IACjC,cAAc,EAAEM,QAAQ,CAACL,IAAI;IAC7B,gBAAgB,EAAEK,QAAQ,CAACJ,MAAM;IACjC,4BAA4B,EAAEI,QAAQ,CAACH,UAAU,CAACO,QAAQ,CAAC;EAC7D,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}